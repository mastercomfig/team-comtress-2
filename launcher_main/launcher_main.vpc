//-----------------------------------------------------------------------------
//	LAUNCHER_MAIN.VPC
//
//	Project Script
//-----------------------------------------------------------------------------

$MacroRequired "PLATSUBDIR"

$Macro SRCDIR		".."
// This is binaries dir, like 'game\bin', 'game\bin\x64', 'game\bin\linux64', 'game\bin\osx64'
$Macro OUTBINDIR	"$SRCDIR\..\game\bin"
// This is main launcher binary dir, like 'game'. Workaround for x64 builds, as $OUTBINDIR
// always has $PLATSUBDIR appended and that is not we really want.
$Macro MAINOUTBINDIR	"$OUTBINDIR\.."

// Must be built explicitly as "default" in order to build a compliant submittable Disc.
// Renames will not work.
$Macro OUTBINNAME	"default"
$Macro OUTBINNAME	"hl2"	[$WIN32]
$Macro OUTBINNAME	"hl2_win64"	[$WIN64]
$Macro OUTBINNAME	"hl2_osx" [$OSX32]
$Macro OUTBINNAME	"hl2_osx64" [$OSX64]
$Macro OUTBINNAME	"hl2_linux" [$LINUX32]
$Macro OUTBINNAME	"hl2_linux64" [$LINUX64]

$Include "$SRCDIR\vpc_scripts\source_exe_base.vpc"
$Include "$SRCDIR\tier0\tier0_exclude.vpc" [$WINDOWS]
$Include "$SRCDIR\tier1\tier1_exclude.vpc" [$WINDOWS]
$Include "$SRCDIR\vstdlib\vstdlib_exclude.vpc" [$WINDOWS]

$Configuration
{
	$General
	{
		$AdditionalProjectDependencies "$BASE;newdat" [$WINDOWS && !$ANALYZE]
	}

	$Compiler
	{
		$PreprocessorDefinitions	"$BASE;fopen=dont_use_fopen"
		$ForceIncludes				" "
	}

	$Linker [$WIN32]
	{
		$EnableLargeAddresses		"Support Addresses Larger Than 2 Gigabytes (/LARGEADDRESSAWARE)"
		$FixedBaseAddress			"Generate a relocation section (/FIXED:NO)"
	}

	$ManifestTool
	{
		// Input And Output
		$AdditionalManifestFiles			"$BASE;launcher_main.manifest.xml" [!$SOURCESDK]
	}

	$Xbox360ImageConversion	[$X360]
	{
		// General
		$AdditionalSections			"4541080F=$SRCDIR\common\hl2orange.spa"
	}

	$PreBuildEvent [$WINDOWS]
	{
		$CommandLine		"if EXIST $QUOTE$MAINOUTBINDIR\$OUTBINNAME.exe$QUOTE for /f $QUOTEdelims=$QUOTE %%A in ('attrib $QUOTE$MAINOUTBINDIR\$OUTBINNAME.exe$QUOTE') do set valveTmpIsReadOnly=$QUOTE%%A$QUOTE" "\n" \
							"set valveTmpIsReadOnlyLetter=%valveTmpIsReadOnly:~6,1%" "\n" \
							"if $QUOTE%valveTmpIsReadOnlyLetter%$QUOTE==$QUOTER$QUOTE del /q $QUOTE$(TargetDir)$(TargetFileName)$QUOTE" "\n" \
							"$CRCCHECK"
	}

	$PostBuildEvent	[$X360]
	{
		// inherit and add
		$CommandLine				"$BASE" \
									"call $QUOTE$SRCDIR\vpc_scripts\valve_xbcp_wrapper.cmd$QUOTE $QUOTE$(TargetDir)$(TargetName).xex$QUOTE xE:\Valve\default.xex" "\n"
	}

	$PostBuildEvent	[$WINDOWS && !$ANALYZE]
	{
		// override with specific behavior
		$CommandLine				"if not exist $QUOTE$MAINOUTBINDIR$QUOTE mkdir $QUOTE$MAINOUTBINDIR$QUOTE" "\n" \
									"if ERRORLEVEL 1 goto BuildEventFailed" "\n" "\n" \
									"call $QUOTE$SRCDIR\vpc_scripts\valve_p4_edit.cmd$QUOTE $QUOTE$MAINOUTBINDIR\$OUTBINNAME.exe$QUOTE $QUOTE$SRCDIR$QUOTE" "\n" \
									"call $QUOTE$SRCDIR\vpc_scripts\valve_p4_edit.cmd$QUOTE $QUOTE$MAINOUTBINDIR\$OUTBINNAME.pdb$QUOTE $QUOTE$SRCDIR$QUOTE" "\n" \
									"copy $QUOTE$(TargetPath)$QUOTE $QUOTE$MAINOUTBINDIR\$OUTBINNAME.exe$QUOTE /Y" "\n" \
									"if ERRORLEVEL 1 goto BuildEventFailed" "\n" "\n" \
									"if exist $QUOTE$(TargetDir)$(TargetName).map$QUOTE copy $QUOTE$(TargetDir)$(TargetName).map$QUOTE $QUOTE$MAINOUTBINDIR\$OUTBINNAME.map$QUOTE /Y" "\n" \
									"copy /B /Y $QUOTE$(TargetDir)$(TargetName).pdb$QUOTE $QUOTE$MAINOUTBINDIR\$OUTBINNAME.pdb$QUOTE" "\n" \
									"if ERRORLEVEL 1 goto BuildEventFailed" "\n" "\n" \
									"call $QUOTE$SRCDIR\vpc_scripts\valve_p4_edit.cmd$QUOTE $QUOTE$MAINOUTBINDIR\$OUTBINNAME.dat$QUOTE $QUOTE$SRCDIR$QUOTE" "\n" \
									"$QUOTE$OUTBINDIR\newdat$QUOTE $QUOTE$MAINOUTBINDIR\$OUTBINNAME.exe$QUOTE" "\n" \
									"goto BuildEventOK" "\n" "\n" \
									":BuildEventFailed" "\n" \
									"echo *** ERROR! PostBuildStep FAILED for $(ProjectName)! EXE or DLL is probably running. ***" "\n" \
									"del /q $QUOTE$(TargetPath)$QUOTE" "\n" \
									"exit 1" "\n" "\n" \
									":BuildEventOK" "\n"
	}
}

$Project "launcher_main"
{
	$Folder	"Source Files"
	{
		$File	"main.cpp"
	}

	$Folder "Resources" [$WINDOWS]
	{
		$File	"launcher_main.rc"
		$File	"$SRCDIR\launcher\res\launcher.ico"
	}
}
